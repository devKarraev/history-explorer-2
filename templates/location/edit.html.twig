{% extends 'content_base.html.twig' %}

{% block title %}

{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
      integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
      crossorigin=""/>
    <link rel="stylesheet" href="{{ asset('css/map.css') }}">
    <style>
        .search-input,
        .leaflet-control-search {
            max-width: 800px;
        }
    </style>
    }
{% endblock %}

{% block content_body %}
<h1>Edit {{ location.name}}</h1>

<hr>

<div class="row">
    <div class="col-sm-6">
        {{ include('location/_form.html.twig', {
            button_text: 'Update',
            edit: true
        }) }}
    </div>
    <div class="col-sm-6">
        <div id="mapid"></div>
    </div>
</div>

<div class="row">
    <hr>
    <div class="col-sm-12">
        {{ include('location/_references.twig', {

        }) }}
    </div>

</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
            integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
            crossorigin=""></script>
    <script src="https://maps.googleapis.com/maps/api/js?v=3&libraries=places&sensor=false&key=AIzaSyDohFJ3i2iSNHhrf8zN7UCe1B7VJCK4G1U"></script>
    <script type="text/javascript">

        var LeafIcon = L.Icon.extend({
            options: {
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41]
            },
            shadowUrl:  '{{ asset('images/markers/marker-shadow.png') }}'
        });
        // https://github.com/pointhi/leaflet-color-markers
        var greenIcon = new LeafIcon({
            iconUrl: '{{ asset('images/markers/marker-icon-green.png') }}',

        })

        var map = L.map('mapid').setView([{{location.lat}}, {{location.lon}}], 8);
        mapLink =
            '<a href="http://openstreetmap.org">OpenStreetMap</a>';
        L.tileLayer(
            'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; ' + mapLink + ' Contributors',
                maxZoom: 18,
            }).addTo(map);

        var validmarker = new L.marker([{{location.lat}}, {{location.lon}}, ],{draggable:'true', icon: greenIcon})
            .addTo(map);

        validmarker.on('dragend', function(event){
            var marker = event.target;
            var position = marker.getLatLng();
            marker.setLatLng(new L.LatLng(position.lat, position.lng),{draggable:'true'});
            map.panTo(new L.LatLng(position.lat, position.lng));
            $('#location_form_lat').val(position.lat);
            $('#location_form_lon').val( position.lng);

        });


        var GooglePlacesSearchBox = L.Control.extend({
            onAdd: function() {
                var element = document.createElement("input");
                element.id = "searchBox";
                return element;
            }
        });
        (new GooglePlacesSearchBox).addTo(map);
        var input = document.getElementById("searchBox");
        var searchBox = new google.maps.places.SearchBox(input);

        var input = document.getElementById("searchBox");
        var searchBox = new google.maps.places.SearchBox(input);

        var foundgroup = L.featureGroup();

        searchBox.addListener('places_changed', function() {
            var places = searchBox.getPlaces();

            if (places.length == 0) {
                return;
            }


            map.removeLayer(foundgroup);
            foundgroup.clearLayers();

            places.forEach(function(place) {

                // Create a marker for each place.
                var marker = L.marker([
                    place.geometry.location.lat(),
                    place.geometry.location.lng()
                ]);
                foundgroup.addLayer(marker);

                marker.on('click', function(event){
                    var marker = event.target;
                    var position = marker.getLatLng();
                    validmarker.setLatLng(new L.LatLng(position.lat, position.lng),{draggable:'true'});
                    map.panTo(new L.LatLng(position.lat, position.lng));
                    $('#location_form_lat').val(position.lat);
                    $('#location_form_lon').val( position.lng);
                    foundgroup.removeLayer(this);
                });

            });

            foundgroup.addTo(map);
            map.fitBounds(foundgroup.getBounds());

        });



    </script>
{% endblock %}

